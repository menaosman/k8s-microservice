name: CI-CD EKS Microservice

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      destroy:
        description: "Set to true to destroy the infrastructure"
        required: false
        default: "false"

env:
  AWS_REGION: ${{ secrets.AWS_REGION || 'us-west-2' }}
  CLUSTER_NAME: stage-eks-cluster
  IMAGE_NAME: solar-system

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      - name: Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

  terraform:
    runs-on: ubuntu-latest
    needs: build-and-push
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply/Destroy
        run: |
          if [[ "${{ github.event.inputs.destroy }}" == "true" ]]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi

  deploy:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Replace image placeholder
        run: |
          sed -i "s#DOCKERHUB_USERNAME#${{ secrets.DOCKERHUB_USERNAME }}#g" k8s/deployment.yml

      - name: Deploy manifests
        run: |
          kubectl apply -f k8s/deployment.yml
          kubectl apply -f k8s/service.yml

      - name: Show status
        run: |
          kubectl get nodes -o wide || true
          kubectl get pods -o wide
          kubectl get svc
          
